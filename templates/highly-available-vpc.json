{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Deploy a Highly Available VPC. Authored by Daniel Wright",
  "Parameters": {
    "VPCCIDR": {
      "Default": "10.10.0.0/16",
      "Description": "Enter the VPC CIDR Block",
      "Type": "String"
    },
    "dbsubnet1cidr": {
      "Default": "10.10.200.0/24",
      "Description": "Enter the DB Subnet 1 CIDR Block",
      "Type": "String"
    },
    "dbsubnet2cidr": {
      "Default": "10.10.210.0/24",
      "Description": "Enter the DB Subnet 2 CIDR Block",
      "Type": "String"
    },
    "privatesubnet1cidr": {
      "Default": "10.10.12.0/22",
      "Description": "Enter the Private Subnet 1 CIDR Block",
      "Type": "String"
    },
    "privatesubnet2cidr": {
      "Default": "10.10.20.0/22",
      "Description": "Enter the Private Subnet 2 CIDR Block",
      "Type": "String"
    },
    "publicsubnet1cidr": {
      "Default": "10.10.0.0/24",
      "Description": "Enter the Public Subnet 1 CIDR Block",
      "Type": "String"
    },
    "publicsubnet2cidr": {
      "Default": "10.10.4.0/24",
      "Description": "Enter the Public Subnet 2 CIDR Block",
      "Type": "String"
    },
    "internalZoneName": {
      "Default": "hermes.internal",
      "Description": "Name for the Route53 Internal Zone",
      "Type": "String"
    }
  },
  "Resources": {
    "EIP1": {
      "Properties": {
        "Domain": {
          "Ref": "VPC"
        }
      },
      "Type": "AWS::EC2::EIP"
    },
    "EIP2": {
      "Properties": {
        "Domain": {
          "Ref": "VPC"
        }
      },
      "Type": "AWS::EC2::EIP"
    },
    "RDSSubnetGroup": {
      "Properties": {
        "DBSubnetGroupDescription": "RDSSubnetGroup",
        "SubnetIds": [
          {
            "Ref": "dbSubnet1"
          },
          {
            "Ref": "dbSubnet2"
          }
        ]
      },
      "Type": "AWS::RDS::DBSubnetGroup"
    },
    "redisSubnetGroup": {
        "Type": "AWS::ElastiCache::SubnetGroup",
        "Properties": {
            "Description": "ElastiCache Subnet Groups",
            "SubnetIds": [ { "Ref": "dbSubnet1" }, { "Ref": "dbSubnet2" } ]
        }
    },
    "VPC": {
      "Properties": {
        "CidrBlock": {
          "Ref": "VPCCIDR"
        },
        "EnableDnsSupport": true,
        "EnableDnsHostnames": true
      },
      "Type": "AWS::EC2::VPC"
    },
    "VPCGatewayAttach": {
      "Properties": {
        "InternetGatewayId": {
          "Ref": "internetGateway"
        },
        "VpcId": {
          "Ref": "VPC"
        }
      },
      "Type": "AWS::EC2::VPCGatewayAttachment"
    },
    "dbSubnet1": {
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            "0",
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "CidrBlock": {
          "Ref": "dbsubnet1cidr"
        },
        "VpcId": {
          "Ref": "VPC"
        }
      },
      "Type": "AWS::EC2::Subnet"
    },
    "dbSubnet2": {
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            "1",
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "CidrBlock": {
          "Ref": "dbsubnet2cidr"
        },
        "VpcId": {
          "Ref": "VPC"
        }
      },
      "Type": "AWS::EC2::Subnet"
    },
    "internetGateway": {
      "Properties": {
      },
      "Type": "AWS::EC2::InternetGateway"
    },
    "natGateway1": {
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "EIP1",
            "AllocationId"
          ]
        },
        "SubnetId": {
          "Ref": "publicSubnet1"
        }
      },
      "Type": "AWS::EC2::NatGateway"
    },
    "natGateway2": {
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "EIP2",
            "AllocationId"
          ]
        },
        "SubnetId": {
          "Ref": "publicSubnet2"
        }
      },
      "Type": "AWS::EC2::NatGateway"
    },
    "privateRoute1": {
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "natGateway1"
        },
        "RouteTableId": {
          "Ref": "privateRouteTable1"
        }
      },
      "Type": "AWS::EC2::Route"
    },
    "privateRoute2": {
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "natGateway2"
        },
        "RouteTableId": {
          "Ref": "privateRouteTable2"
        }
      },
      "Type": "AWS::EC2::Route"
    },
    "privateRouteTable1": {
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        }
      },
      "Type": "AWS::EC2::RouteTable"
    },
    "privateRouteTable2": {
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        }
      },
      "Type": "AWS::EC2::RouteTable"
    },
    "privateSubnet1": {
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            "0",
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "CidrBlock": {
          "Ref": "privatesubnet1cidr"
        },
        "VpcId": {
          "Ref": "VPC"
        }
      },
      "Type": "AWS::EC2::Subnet"
    },
    "privateSubnet2": {
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            "1",
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "CidrBlock": {
          "Ref": "privatesubnet2cidr"
        },
        "VpcId": {
          "Ref": "VPC"
        }
      },
      "Type": "AWS::EC2::Subnet"
    },
    "publicRoute": {
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "internetGateway"
        },
        "RouteTableId": {
          "Ref": "publicRouteTable"
        }
      },
      "Type": "AWS::EC2::Route"
    },
    "publicRouteTable": {
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        }
      },
      "Type": "AWS::EC2::RouteTable"
    },
    "publicSubnet1": {
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            "0",
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "CidrBlock": {
          "Ref": "publicsubnet1cidr"
        },
        "MapPublicIpOnLaunch": "True",
        "VpcId": {
          "Ref": "VPC"
        }
      },
      "Type": "AWS::EC2::Subnet"
    },
    "publicSubnet2": {
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            "1",
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "CidrBlock": {
          "Ref": "publicsubnet2cidr"
        },
        "MapPublicIpOnLaunch": "True",
        "VpcId": {
          "Ref": "VPC"
        }
      },
      "Type": "AWS::EC2::Subnet"
    },
    "subnetAssociation1": {
      "Properties": {
        "RouteTableId": {
          "Ref": "publicRouteTable"
        },
        "SubnetId": {
          "Ref": "publicSubnet1"
        }
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation"
    },
    "subnetAssociation2": {
      "Properties": {
        "RouteTableId": {
          "Ref": "publicRouteTable"
        },
        "SubnetId": {
          "Ref": "publicSubnet2"
        }
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation"
    },
    "subnetAssociation3": {
      "Properties": {
        "RouteTableId": {
          "Ref": "privateRouteTable1"
        },
        "SubnetId": {
          "Ref": "privateSubnet1"
        }
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation"
    },
    "subnetAssociation4": {
      "Properties": {
        "RouteTableId": {
          "Ref": "privateRouteTable1"
        },
        "SubnetId": {
          "Ref": "dbSubnet1"
        }
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation"
    },
    "subnetAssociation5": {
      "Properties": {
        "RouteTableId": {
          "Ref": "privateRouteTable2"
        },
        "SubnetId": {
          "Ref": "privateSubnet2"
        }
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation"
    },
    "subnetAssociation6": {
      "Properties": {
        "RouteTableId": {
          "Ref": "privateRouteTable2"
        },
        "SubnetId": {
          "Ref": "dbSubnet2"
        }
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation"
    },
    "route53Zone": {
      "Type": "AWS::Route53::HostedZone",
      "Properties": {
        "HostedZoneConfig": {
          "Comment": "Private Hosted Zone for VPC"
        },
        "Name": "hermes.internal",
        "VPCs": [{
          "VPCId": { "Ref": "VPC" },
          "VPCRegion": { "Ref": "AWS::Region" }
        }]
      }
    },
    "apiGwServiceSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Allow All Traffic From Tyk Elastic Load Balancer",
        "SecurityGroupIngress": [
          {
            "CidrIp": { "Ref": "VPCCIDR" },
            "FromPort": "22",
            "IpProtocol": "tcp",
            "ToPort": "22"
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "Tyk-Service-Instance-Security-Group"
          }
        ],
        "VpcId": {
          "Ref": "VPC"
        }
      }
    }
  },
  "Outputs": {
    "RDSSubnetGroup": {
      "Description": "RDS Database Subnet Group",
      "Value": {
        "Ref": "RDSSubnetGroup"
      }
    },
    "redisSubnetGroup": {
      "Description": "Redis Subnet Group",
      "Value": {
        "Ref": "redisSubnetGroup"
      }
    },
    "VPC": {
      "Description": "VPC ID",
      "Value": {
        "Ref": "VPC"
      }
    },
    "VPCCIDR": {
      "Description": "VPC CIDR Block",
      "Value": {
        "Ref": "VPCCIDR"
      }
    },
    "dbSubnet1": {
      "Description": "Database Subnet 1",
      "Value": {
        "Ref": "dbSubnet1"
      }
    },
    "dbSubnet2": {
      "Description": "Database Subnet 2",
      "Value": {
        "Ref": "dbSubnet2"
      }
    },
    "internetGateway": {
      "Description": "Internet Gateway 2 ID",
      "Value": {
        "Ref": "internetGateway"
      }
    },
    "natGateway1": {
      "Description": "NAT Gateway 1 ID",
      "Value": {
        "Ref": "natGateway1"
      }
    },
    "natGateway2": {
      "Description": "NAT Gateway 2 ID",
      "Value": {
        "Ref": "natGateway2"
      }
    },
    "privateRouteTable1": {
      "Description": "privateRouteTable1 ID",
      "Value": {
        "Ref": "privateRouteTable1"
      }
    },
    "privateRouteTable2": {
      "Description": "privateRouteTable2 ID",
      "Value": {
        "Ref": "privateRouteTable2"
      }
    },
    "privateSubnet1": {
      "Description": "Private Subnet 1",
      "Value": {
        "Ref": "privateSubnet1"
      }
    },
    "privateSubnet2": {
      "Description": "Private Subnet 2",
      "Value": {
        "Ref": "privateSubnet2"
      }
    },
    "publicRouteTable": {
      "Description": "publicRouteTable ID",
      "Value": {
        "Ref": "publicRouteTable"
      }
    },
    "publicSubnet1": {
      "Description": "Public Subnet/DMZ 1",
      "Value": {
        "Ref": "publicSubnet1"
      }
    },
    "publicSubnet2": {
      "Description": "Public Subnet/DMZ 2",
      "Value": {
        "Ref": "publicSubnet2"
      }
    },
    "route53Zone": {
      "Description": "Hosted Zone for Internal Route 53",
      "Value": {
        "Ref": "route53Zone"
      }
    },
    "EIP1": {
      "Description": "First Elastic IP Address",
      "Value": {
        "Ref": "EIP1"
      }
    },
    "EIP2": {
      "Description": "Second Elastic IP Address",
      "Value": {
        "Ref": "EIP2"
      }
    },
    "apiGwServiceSecurityGroup": {
      "Description": "API Gateway Instances Security Group",
      "Value": {
        "Ref": "apiGwServiceSecurityGroup"
      }
    }
  }
}
