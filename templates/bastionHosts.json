{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Deploy bastion hosts inside a VPC. Authored by Daniel Wright",
  "Parameters": {
    "bastionInstanceType": {
      "AllowedValues": [
        "t2.micro",
        "t2.medium",
        "t2.large",
        "m4.large"
      ],
      "ConstraintDescription": "must be a valid and allowed EC2 instance type.",
      "Default": "t2.micro",
      "Description": "Bastion instance type",
      "Type": "String"
    },
    "keyName": {
      "Default": "NT",
      "Description": "Name of pem file to use when launching instances",
      "Type": "String"
    },
    "privateSubnet1": {
      "Description": "Availability Zone 1 Private Subnet",
      "Type": "AWS::EC2::Subnet::Id"
    },
    "privateSubnet2": {
      "Description": "Availability Zone 2 Private Subnet",
      "Type": "AWS::EC2::Subnet::Id"
    },
    "publicSubnet1": {
      "Description": "Availability Zone 1 Public Subnet",
      "Type": "AWS::EC2::Subnet::Id"
    },
    "publicSubnet2": {
      "Description": "Availability Zone 2 Public Subnet",
      "Type": "AWS::EC2::Subnet::Id"
    },
    "vpcId": {
      "Description": "Select a VPC-ID to use",
      "Type": "AWS::EC2::VPC::Id"
    },
    "myPublicIp": {
      "Description": "Your public IP address for Private Access",
      "Type": "String"
    }
  },
  "Mappings": {
    "awsInstanceTypeArch": {
      "m4.large": {
        "Arch": "64"
      },
      "t2.large": {
        "Arch": "64"
      },
      "t2.medium": {
        "Arch": "64"
      },
      "t2.micro": {
        "Arch": "64"
      }
    },
    "ubuntuLatestAmi": {
      "ap-southeast-2": {
        "64": "ami-6c14310f"
      },
      "us-east-1": {
        "64": "ami-fce3c696"
      },
      "us-west-1": {
        "64": "ami-06116566"
      },
      "us-west-2": {
        "64": "ami-9abea4fb"
      }
    }
  },
  "Resources": {
    "bastionRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": { "Service": [ "ec2.amazonaws.com" ] },
              "Action": [ "sts:AssumeRole" ]
            }
          ]
        },
        "Path": "/",
        "Policies": [
          {
            "PolicyName": "AdminAccess",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": "*",
                  "Resource": "*"
                }
              ]
            }
          }
        ]
      }
    },
    "bastionInstanceProfile": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Path": "/",
        "Roles": [ { "Ref": "bastionRole" } ]
      }
    },
    "EIP1": {
      "Properties": {
        "Domain": {
          "Ref": "vpcId"
        },
        "InstanceId": {
          "Ref": "bastionHost1"
        }
      },
      "Type": "AWS::EC2::EIP"
    },
    "EIP2": {
      "Properties": {
        "Domain": {
          "Ref": "vpcId"
        },
        "InstanceId": {
          "Ref": "bastionHost2"
        }
      },
      "Type": "AWS::EC2::EIP"
    },
    "bastionHost1": {
      "Properties": {
        "ImageId": {
          "Fn::FindInMap": [
            "ubuntuLatestAmi",
            {
              "Ref": "AWS::Region"
            },
            {
              "Fn::FindInMap": [
                "awsInstanceTypeArch",
                {
                  "Ref": "bastionInstanceType"
                },
                "Arch"
              ]
            }
          ]
        },
        "InstanceType": {
          "Ref": "bastionInstanceType"
        },
        "KeyName": {
          "Ref": "keyName"
        },
        "NetworkInterfaces": [
          {
            "AssociatePublicIpAddress": "false",
            "DeleteOnTermination": "true",
            "DeviceIndex": "0",
            "GroupSet": [
              {
                "Ref": "bastionSecurityGroup"
              }
            ],
            "SubnetId": {
              "Ref": "publicSubnet1"
            }
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "bastion-host-az1"
          },
          {
            "Key": "Bastion",
            "Value": "true"
          }
        ],
        "IamInstanceProfile": {
          "Ref": "bastionInstanceProfile"
        }
      },
      "Type": "AWS::EC2::Instance"
    },
    "bastionHost2": {
      "Properties": {
        "ImageId": {
          "Fn::FindInMap": [
            "ubuntuLatestAmi",
            {
              "Ref": "AWS::Region"
            },
            {
              "Fn::FindInMap": [
                "awsInstanceTypeArch",
                {
                  "Ref": "bastionInstanceType"
                },
                "Arch"
              ]
            }
          ]
        },
        "InstanceType": {
          "Ref": "bastionInstanceType"
        },
        "KeyName": {
          "Ref": "keyName"
        },
        "NetworkInterfaces": [
          {
            "AssociatePublicIpAddress": "false",
            "DeleteOnTermination": "true",
            "DeviceIndex": "0",
            "GroupSet": [
              {
                "Ref": "bastionSecurityGroup"
              }
            ],
            "SubnetId": {
              "Ref": "publicSubnet2"
            }
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "bastion-host-az2"
          },
          {
            "Key": "Bastion",
            "Value": "true"
          }
        ],
        "IamInstanceProfile": {
          "Ref": "bastionInstanceProfile"
        }
      },
      "Type": "AWS::EC2::Instance"
    },
    "bastionSecurityGroup": {
      "Properties": {
        "GroupDescription": "Security Group for Bastion Hosts",
        "SecurityGroupIngress": [
          {
            "CidrIp": { "Ref": "myPublicIp" },
            "FromPort": "22",
            "IpProtocol": "tcp",
            "ToPort": "22"
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "bastionSecurityGroup"
          }
        ],
        "VpcId": {
          "Ref": "vpcId"
        }
      },
      "Type": "AWS::EC2::SecurityGroup"
    }
  },
  "Outputs": {
    "bastionSecurityGroup": {
      "Description": "Bastion Hosts Security Group",
      "Value": {
        "Ref": "bastionSecurityGroup"
      }
    }
  }
}
