{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Master CloudFormation Template Containing Base Infrastructure Authored by Daniel Wright",
  "Parameters": {
    "VPCCIDR": {
      "Default": "10.10.0.0/16",
      "Description": "Enter the VPC CIDR Block",
      "Type": "String"
    },
    "dbsubnet1cidr": {
      "Default": "10.10.200.0/24",
      "Description": "Enter the DB Subnet 1 CIDR Block",
      "Type": "String"
    },
    "dbsubnet2cidr": {
      "Default": "10.10.210.0/24",
      "Description": "Enter the DB Subnet 2 CIDR Block",
      "Type": "String"
    },
    "privatesubnet1cidr": {
      "Default": "10.10.12.0/22",
      "Description": "Enter the Private Subnet 1 CIDR Block",
      "Type": "String"
    },
    "privatesubnet2cidr": {
      "Default": "10.10.20.0/22",
      "Description": "Enter the Private Subnet 2 CIDR Block",
      "Type": "String"
    },
    "publicsubnet1cidr": {
      "Default": "10.10.0.0/24",
      "Description": "Enter the Public Subnet 1 CIDR Block",
      "Type": "String"
    },
    "publicsubnet2cidr": {
      "Default": "10.10.4.0/24",
      "Description": "Enter the Public Subnet 2 CIDR Block",
      "Type": "String"
    },
    "internalZoneName": {
      "Default": "hermes.internal",
      "Description": "Name for the Route53 Internal Zone",
      "Type": "String"
    },
    "targetEnvironment": {
      "Default": "test",
      "Type": "String"
    },
    "myPublicIp": {
      "Description": "Your public IP address for Private Access",
      "Type": "String",
      "Default": "0.0.0.0/0"
    },
    "sslCertificateId": {
      "Description": "The ARN of your SSL Certificate Stored in IAM",
      "Type": "String",
      "Default": "ENTER A VALID SSL CERTIFICATE ARN HERE"
    },
    "s3Bucket": {
      "Default": "",
      "Description": "Existing S3 bucket to use for Jenkins backups and restores",
      "Type": "String"
    },
    "dynamicDynamoS3Bucket": {
      "Type": "String",
      "Default": "s3://simple-dynamodb/autoscale/",
      "Description": "Remove this default value and enter your pre-created S3 Bucket url upto folder name. (Please include the trailing /. Example: https://s3.amazonaws.com/my-bucket/ should be input as s3://my-bucket/). It will be used for storing a copy of Dynamic DynamoDB configuration file."
    },
    "dynamicDynamoS3BucketRegion": {
      "Type": "String",
      "Default": "us-west-2",
      "Description": "Region the S3 bucket is located in. This is needed due to a limitation in the AWS CLI (https://github.com/aws/aws-cli/issues/564)"
    }
  },
  "Resources": {
    "vpcCreate": {
      "Properties": {
        "Parameters": {
          "VPCCIDR": { "Ref": "VPCCIDR" },
          "dbsubnet1cidr": { "Ref": "dbsubnet1cidr" },
          "dbsubnet2cidr": { "Ref": "dbsubnet2cidr" },
          "privatesubnet1cidr": { "Ref": "privatesubnet1cidr" },
          "privatesubnet2cidr": { "Ref": "privatesubnet2cidr" },
          "publicsubnet1cidr": { "Ref": "publicsubnet1cidr" },
          "publicsubnet2cidr": {"Ref": "publicsubnet2cidr" },
          "internalZoneName": {"Ref": "internalZoneName" }
        },
        "TemplateURL": "https://s3-us-west-1.amazonaws.com/some-bucket/vpcCreate.json"
      },
      "Type": "AWS::CloudFormation::Stack"
    },
    "bastionHosts": {
      "DependsOn": "vpcCreate",
      "Properties": {
        "Parameters": {
          "myPublicIp": { "Ref": "myPublicIp" },
          "privateSubnet1": { "Fn::GetAtt": [ "vpcCreate", "Outputs.privateSubnet1" ]},
          "privateSubnet2": { "Fn::GetAtt": [ "vpcCreate", "Outputs.privateSubnet2" ] },
          "publicSubnet1": { "Fn::GetAtt": [ "vpcCreate", "Outputs.publicSubnet1" ] },
          "publicSubnet2": { "Fn::GetAtt": [ "vpcCreate", "Outputs.publicSubnet2" ] },
          "vpcId": { "Fn::GetAtt": [ "vpcCreate", "Outputs.VPC" ] }
        },
        "TemplateURL": "https://s3-us-west-1.amazonaws.com/some-bucket/bastionHosts.json"
      },
      "Type": "AWS::CloudFormation::Stack"
    },
    "jenkins": {
      "DependsOn": "vpcCreate",
      "Properties": {
        "Parameters": {
          "keyName": "NT-Oregon",
          "myPublicIp": { "Ref": "myPublicIp" },
          "s3Bucket": { "Ref": "s3Bucket" },
          "publicSubnets": { "Fn::Join": [ ",", [
            { "Fn::GetAtt": [ "vpcCreate", "Outputs.publicSubnet1" ] },
            { "Fn::GetAtt": [ "vpcCreate", "Outputs.publicSubnet2" ] }
            ] ] },
          "vpcId": { "Fn::GetAtt": [ "vpcCreate", "Outputs.VPC" ] }
        },
        "TemplateURL": "https://s3-us-west-1.amazonaws.com/some-bucket/jenkins.json"
      },
      "Type": "AWS::CloudFormation::Stack"
    },
    "monitoring": {
      "Properties": {
        "Parameters": {
          "targetEnvironment": { "Ref": "targetEnvironment" }
        },
        "TemplateURL": "https://s3-us-west-1.amazonaws.com/some-bucket/monitoring.json"
      },
      "Type": "AWS::CloudFormation::Stack"
    },
    "dynamicDynamoDb": {
      "DependsOn": "vpcCreate",
      "Properties": {
        "Parameters": {
          "myPublicIp": { "Ref": "myPublicIp" },
          "dynamicDynamoS3Bucket": { "Ref": "S3Bucket" },
          "dynamicDynamoS3BucketRegion": { "Ref": "S3BucketRegion" },
          "publicSubnets": { "Fn::Join": [ ",", [
            { "Fn::GetAtt": [ "vpcCreate", "Outputs.publicSubnet1" ] },
            { "Fn::GetAtt": [ "vpcCreate", "Outputs.publicSubnet2" ] }
            ] ] },
          "vpcId": { "Fn::GetAtt": [ "vpcCreate", "Outputs.VPC" ] }
        },
        "TemplateURL": "https://s3-us-west-1.amazonaws.com/some-bucket/dynamicDynamoDb.json"
      },
      "Type": "AWS::CloudFormation::Stack"
    }
  },
  "Outputs": {
    "RDSSubnetGroup": {
      "Description": "RDS Database Subnet Group",
      "Value": {
        "Fn::GetAtt": [ "vpcCreate", "Outputs.RDSSubnetGroup" ]
      }
    },
    "redisSubnetGroup": {
      "Description": "Redis Subnet Group",
      "Value": {
        "Fn::GetAtt": [ "vpcCreate", "Outputs.redisSubnetGroup" ]
      }
    },
    "VPC": {
      "Description": "VPC ID",
      "Value": {
        "Fn::GetAtt": [ "vpcCreate", "Outputs.VPC" ]
      }
    },
    "VPCCIDR": {
      "Description": "VPC CIDR Block",
      "Value": {
        "Fn::GetAtt": [ "vpcCreate", "Outputs.VPCCIDR" ]
      }
    },
    "internetGateway": {
      "Description": "Internet Gateway 2 ID",
      "Value": {
        "Fn::GetAtt": [ "vpcCreate", "Outputs.internetGateway" ]
      }
    },
    "natGateway1": {
      "Description": "NAT Gateway 1 ID",
      "Value": {
        "Fn::GetAtt": [ "vpcCreate", "Outputs.natGateway1" ]
      }
    },
    "natGateway2": {
      "Description": "NAT Gateway 2 ID",
      "Value": {
        "Fn::GetAtt": [ "vpcCreate", "Outputs.natGateway2" ]
      }
    },
    "privateRouteTable1": {
      "Description": "privateRouteTable1 ID",
      "Value": {
        "Fn::GetAtt": [ "vpcCreate", "Outputs.privateRouteTable1" ]
      }
    },
    "privateRouteTable2": {
      "Description": "privateRouteTable2 ID",
      "Value": {
        "Fn::GetAtt": [ "vpcCreate", "Outputs.privateRouteTable2" ]
      }
    },
    "publicRouteTable": {
      "Description": "publicRouteTable ID",
      "Value": {
        "Fn::GetAtt": [ "vpcCreate", "Outputs.publicRouteTable" ]
      }
    },
    "privateSubnet1": {
      "Description": "Private Subnet 1",
      "Value": {
        "Fn::GetAtt": [ "vpcCreate", "Outputs.privateSubnet1" ]
      }
    },
    "privateSubnet2": {
      "Description": "Private Subnet 2",
      "Value": {
        "Fn::GetAtt": [ "vpcCreate", "Outputs.privateSubnet2" ]
      }
    },
    "publicSubnet1": {
      "Description": "Public Subnet/DMZ 1",
      "Value": {
        "Fn::GetAtt": [ "vpcCreate", "Outputs.publicSubnet1" ]
      }
    },
    "publicSubnet2": {
      "Description": "Public Subnet/DMZ 2",
      "Value": {
        "Fn::GetAtt": [ "vpcCreate", "Outputs.publicSubnet2" ]
      }
    },
    "dbSubnet1": {
      "Description": "Database Subnet 1",
      "Value": {
        "Fn::GetAtt": [ "vpcCreate", "Outputs.dbSubnet1" ]
      }
    },
    "dbSubnet2": {
      "Description": "Database Subnet 2",
      "Value": {
        "Fn::GetAtt": [ "vpcCreate", "Outputs.dbSubnet2" ]
      }
    },
    "route53Zone": {
      "Description": "Internal DNS Zone",
      "Value": {
        "Fn::GetAtt": [ "vpcCreate", "Outputs.route53Zone" ]
      }
    },
    "bastionSecurityGroup": {
      "Description": "Bastion Hosts Security Group",
      "Value": {
        "Fn::GetAtt": [ "bastionHosts", "Outputs.bastionSecurityGroup" ]
      }
    },
    "snsTopic": {
      "Description": "Bastion Hosts Security Group",
      "Value": {
        "Fn::GetAtt": [ "monitoring", "Outputs.snsTopic" ]
      }
    },
    "EIP1": {
      "Description": "First Elastic IP Address",
      "Value": {
        "Fn::GetAtt": [ "vpcCreate", "Outputs.EIP1" ]
      }
    },
    "EIP2": {
      "Description": "Second Elastic IP Address",
      "Value": {
        "Fn::GetAtt": [ "vpcCreate", "Outputs.EIP2" ]
      }
    },
    "infrastructureLogGroup": {
      "Description": "Shared Infrastructure Log Group",
      "Value": {
        "Fn::GetAtt": [ "monitoring", "Outputs.infrastructureLogGroup" ]
      }
    },
    "apiGwServiceSecurityGroup": {
      "Description": "API Gateway Service Security Group referenced in other stacks",
      "Value": {
        "Fn::GetAtt": [ "vpcCreate", "Outputs.apiGwServiceSecurityGroup" ]
      }
    }
  }
}
